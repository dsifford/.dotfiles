# shellcheck shell=sh
unbind-key -a   # Clean slate

# Fix for tmux clipboard issue in OSX (https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard)
if-shell "test $(uname -s) = Darwin" "set-option -g default-command \"exec reattach-to-user-namespace -l $SHELL\""

#==================================================#
#                    General                       #
#==================================================#
set -g default-terminal "tmux-256color"
set -g escape-time 0
set -g status-justify left
set -g status-interval 1
set -g status-position bottom

# Use Ctrl-a rather than Ctrl-b
set -g prefix C-a
bind C-a send-prefix

# vi-style controls for copy mode
setw -g mode-keys vi

# Begin indices at 1, rather than 0
set -g base-index 1
setw -g pane-base-index 1

# Reload tmux.conf
bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config.'

#==================================================#
#                Layout / Colors                   #
#==================================================#
set -g status-bg colour235              # Status bar background
set -g clock-mode-colour cyan           # Clock mode color

set -g message-fg colour235             # Message foreground color
set -g message-bg yellow                # Message background color

set -g message-command-fg blue          # Command message foreground color
set -g message-command-bg black         # Command message background color

set -g mode-fg colour235                # Highlight and scroll indicator foreground
set -g mode-bg yellow                   # Highlight and scroll indicator background

set -g pane-border-fg blue              # Border color of inactive pane
set -g pane-active-border-fg green      # Border color of active pane
set -g pane-active-border-bg default    # Border background color (none)

# Unset left-bound status items
set -g status-left ''
set -g status-left-length 2

# Date and time
set -g status-right '#[fg=colour235,bold,bg=magenta] %h %d #[fg=colour235,bg=green,bold] %H:%M:%S '
set -g status-right-length 50

# Current tab
set -g window-status-current-format '#[fg=green,bold]#I.#[fg=white,bold] #W#[fg=cyan,bold]#F'

# Other tabs
set -g window-status-format '#[fg=white]#I. #W#[fg=colour244] '

#==================================================#
#                   Keybindings                    #
#==================================================#

bind :      command-prompt  # Activate command prompt
bind '?'    list-keys       # Show list of keybindings
bind Space  next-layout     # Switch layout mode
bind '~'    show-message    # Display log messages
bind [      copy-mode       # Enter copy mode
bind v      copy-mode       # Enter copy mode
bind ]      paste-buffer    # Paste most recently copied text
bind t      clock-mode      # Enter clock mode
bind q      display-panes   # Briefly display pane indexes
bind z      resize-pane -Z  # Toggle zoom state of current pane
bind '{'    swap-pane -U    # Swap the current pane with the previous pane
bind '}'    swap-pane -D    # Swap the current pane with the next pane

# Session commands
bind '$'    command-prompt -I "rename-session " # Rename active session
bind '('    switch-client -p                    # Switch to previous session
bind ')'    switch-client -n                    # Switch to next session

# Window commands
bind X      confirm-before -p "kill-window #W? (y/n)" kill-window   # Kill active window
bind c      new-window -c "#{pane_current_path}"                    # Create new window in current directory
bind ,      command-prompt -I "rename-window "                      # Rename active window

bind 1      select-window -t :1  # Select window 1
bind 2      select-window -t :2  # Select window 2
bind 3      select-window -t :3  # Select window 3
bind 4      select-window -t :4  # Select window 4
bind 5      select-window -t :5  # Select window 5
bind 6      select-window -t :6  # Select window 6
bind 7      select-window -t :7  # Select window 7
bind 8      select-window -t :8  # Select window 8
bind 9      select-window -t :9  # Select window 9

# Pane commands
bind x      confirm-before -p "kill-pane #P? (y/n)" kill-pane # Kill active pane
bind _      split-window -v -c "#{pane_current_path}"         # Split window vertically (top and bottom)
bind |      split-window -h -c "#{pane_current_path}"         # Split window horizontally (left and right)

# Switch pane with Alt-(h,j,k,l)
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Resize pane with Alt-Shift-(h,j,k,l)
bind -n M-L resize-pane -R 5
bind -n M-H resize-pane -L 5
bind -n M-K resize-pane -U
bind -n M-J resize-pane -D

# vi-style copy/paste
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# Mouse controls
set -g mouse on
bind -n WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -n WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -n MouseDown1Status select-window -t=  # Select window with left click
bind -n MouseDown2Status kill-window -t=    # Kill window with middle click

#==================================================#
#                     Plugins                      #
#==================================================#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'Morantron/tmux-fingers'

# tmux-fingers
set -g @fingers-key f
set -g @fingers-compact-hints 0
set -g @fingers-copy-command 'xclip -selection clipboard'
set -g @fingers-hint-format '#[fg=cyan,bold][#[fg=red,bold]%s#[fg=cyan,bold]]'
set -g @fingers-hint-format-nocompact '#[fg=cyan,bold][#[fg=red,bold]%s#[fg=cyan,bold]]'
set -g @fingers-highlight-format '#[fg=black,bold,dim,bg=yellow]%s'
set -g @fingers-highlight-format-nocompact '#[fg=black,bold,dim,bg=yellow]%s'

set -g @fingers-pattern-0 '(([0-9]+[a-zA-Z]+|[a-zA-Z]+[0-9]+)[a-zA-Z0-9]+){2,}' # Docker image IDs & now.sh deployment IDs
set -g @fingers-pattern-1 '[^[:space:]]+.now.sh'                                # now.sh urls

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run ~/.tmux/plugins/tpm/tpm
