#!/bin/bash

# Update packages/package list
pacman --noconfirm -Syu
pacman --noconfirm --needed -S yaourt
yaourt --noconfirm -Syu

if [[ ! $HOME ]]; then
    export HOME='/home/dsifford'
fi

# Set "pc_flag" according to hostname
[[ $(uname -n) == "desktop" ]] && pc_flag="$" || pc_flag="@"

# Install all pacman packages from pacman list if they
# aren't yet installed or if they're outdated
# Pause for confirmation on packages that are unique to the PC
while IFS='' read -r line || [[ -n $line ]]; do
    if [[ ${line:0:1} =~ (\$|@) ]]; then
        if [[ ${line:0:1} != $pc_flag ]]; then
            continue
        fi
        while true; do
            printf "Should %s be installed on this system? [Yn]\n" "${line:1}"
            IFS='' read should_install </dev/tty
            if [[ $should_install =~ (Y|y) ]]; then
                echo "Installing..."
                pacman --noconfirm --needed -S ${line:1}
                break
            elif [[ $should_install =~ (N|n) ]]; then
                echo "Skipping..."
                break
            else
                continue
            fi
        done
        continue
    fi
    printf "PACMAN: Installing package %s...\n" "$line"
    pacman --noconfirm --needed -S $line
done < "packages/pacman"

# Install all yaourt packages from yaourt list if they aren't
# yet installed or if they're outdated
while IFS='' read -r line || [[ -n $line ]]; do
    printf "YAOURT: Installing package %s...\n" "$line"
    yaourt --noconfirm --needed -S $line
done < "packages/yaourt"

# Initialize golang directory
mkdir -p $HOME/gocode/{bin,pkg,src/github.com/dsifford}

# Initialize repos directory
mkdir -p $HOME/repos

# Install known python script dependencies
pip2 install ouimeaux phue
