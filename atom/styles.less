.minimap .bookmark {
  background: magenta;
}

::-webkit-scrollbar {
    display: none;
}

.bracket-matcher .region,
atom-text-editor::shadow .bracket-matcher .region {
    background: rgba(255, 0, 255, 0.15);
    border: solid magenta 1px;
    padding: 4px;
}

.tooltip-inner {
    background: #15191B;
}

.btn.selected, .btn.selected:hover {
    color: #d4d7d6;
    background-color: #15191B;
}

atom-text-editor .highlight.current-result .region,
atom-text-editor .highlight.current-result ~ .highlight.selection .region {
    background: rgba(255, 0, 255, 0.15);
    border: 1px solid magenta;
}

atom-text-editor.is-focused {
  .line.cursor-line, .line-number.cursor-line-no-selection {
    background-color: transparent;
  }
}

.tooltip {
    max-width: none;
    .tooltip-inner {
        max-width: none;
    }
}

.markdown-preview table th {
    background-color: #EAEAEA;
}

atom-text-editor {

    // Markdown
    .markup.strike.gfm {
        opacity: 0.2;
        text-decoration: line-through;
        font-style: italic;
    }

    // Variables / Types / etc
    .storage.type.variable.ts,
    .storage.type.variable.tsx,
    .support.class.ts,
    .support.class.tsx {
        font-style: italic;
        text-decoration: underline;
        font-weight: bold;
    }

    .storage.type.js,
    .storage.type.jsx,
    .storage.type.ts,
    .storage.type.tsx,
    .storage.type.js,
    .storage.type.jsx,
    .storage.type.ts,
    .storage.type.tsx, {
        font-weight: bold;
    }

    .type.name.tsx:extend(.storage.type.ts) {};

    .keyword {
        font-weight: bold;
    }

    .storage.modifier {
        font-style: italic;
        font-weight: 800;
    }

    .variable.language.js,
    .variable.language.jsx,
    .variable.language.ts,
    .variable.language.tsx {
        font-weight: 800;
    }

    .type.primitve.flowtype {
        font-weight: bold;
        font-style: italic;
        text-decoration: underline;
    }



}

atom-text-editor  .bracket-matcher .region {
  border: 1px solid rgba(214, 0, 146, .9);
  border-radius: 3px;
  background-color: rgba(255, 25, 182, 0.4);
  z-index: 100;
}

atom-text-editor.vim-mode-plus.normal-mode,
atom-text-editor.vim-mode-plus.operator-pending-mode,
atom-text-editor.vim-mode-plus.visual-mode
{
  &,
  &.is-focused {
    &
    {
      /* cursor color */
      .cursor {
        background: white;
      }
      .blink-off .cursor {
        // cursor style while blinking (if you so desire)
      }
    }
  }
}

// What is this for?
.panel-heading {
    font-size: 16px;
}
.panel-heading .text-error {
    font-weight: bold;
}


/**
 *  TS Semantic View
 */
.atomts-semantic-view {
    font-size: 1.1em;
    font-family: 'Monaco';

    .selected {
        background: 0;
        font-weight: bold;
        border-bottom: solid 2px;
    }

    & > .layout.vertical > div > .node:first-of-type {
        border-bottom: 2px dashed #D5D5D5;
        padding-bottom: 10px;
        margin-bottom: 10px;
    }

    .icon-class,
    .icon-module {
        font-weight: bold;
        color: magenta;
    }
    .icon-module {
        color: red;

        & ~ .node {

            // All upper-level module icons
            & > .icon-function {
                color: #00E6FF;
            }

            // Fixes the top row indent level
            span {
                margin-left: 10px;
                &:first-child {
                    display:none;
                }
            }
        }
    }

    .icon-interface {
        color: yellow;
    }

    .icon-method,
    .icon-constructor {
        color: lime;
    }

}
