#!/usr/bin/env python3

from enum import Enum
import i3ipc


class Padding(Enum):
    TOP = 70
    RIGHT = 20
    BOTTOM = 20
    LEFT = 20


def get_current_output(rect):
    for output in i3.get_outputs():
        if not output.current_workspace:
            continue
        if output.rect.x <= rect.x:
            return output
    raise Exception('Could\'t identify current output')


def get_x_position(output_rect, rect) -> int:
    on_left = \
        output_rect.x + (output_rect.width / 2) > rect.x + (rect.width / 2)
    if on_left:
        return output_rect.x + Padding.LEFT.value
    else:
        return (output_rect.x + output_rect.width) - (
            rect.width + Padding.RIGHT.value)


def get_y_position(output_rect, rect) -> int:
    on_top = \
        rect.y + (rect.height / 2) > output_rect.y + (output_rect.height / 2)
    if on_top:
        return output_rect.y + Padding.TOP.value
    else:
        return output_rect.y + output_rect.height - rect.height - Padding.BOTTOM.value


def on_focus(container, e):
    if e.container.name != 'FLOATING_PLAYER_WINDOW' \
            or 'FLOATING_ACTIVE' not in e.container.marks:
        return

    output = get_current_output(e.container.props.rect)
    rect = e.container.props.rect

    container.command('move position {:d} {:d}'.format(
        get_x_position(output.rect, rect), get_y_position(output.rect, rect)))

    container.command('focus tiling')


i3 = i3ipc.Connection()
i3.on('window::focus', on_focus)
i3.main()
