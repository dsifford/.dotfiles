
# General: {{{

unbind -a

set -g  prefix C-a

set -g  default-terminal   'tmux-256color'
set -g  escape-time        0
set -g  history-limit      25000
set -g  renumber-windows   on
set -g  status-interval    1
set -g  status-justify     left
set -g  status-position    bottom
set -ga terminal-overrides ',*:Tc'

# vi-style controls for copy mode
setw -g mode-keys vi

# Begin indices at 1, rather than 0
set  -g base-index      1
setw -g pane-base-index 1

#}}}
# Layout / Colors: {{{

set -g status-style             bg='#21222C'       # Status bar background
set -g clock-mode-colour        cyan               # Clock mode color

set -g message-command-style    bg=yellow,fg=black # Command message foreground color

set -g mode-style               bg=yellow,fg=black # Highlight and scroll indicator foreground

set -g pane-border-style        fg=blue            # Border color of inactive pane
set -g pane-active-border-style fg=green           # Border color of active pane

# Unset left-bound status items
set -g status-left                  ''
set -g status-left-length           2

# Date and time
set -g status-right                 '#[fg=#21222C,bold,bg=magenta] %h %d #[fg=#21222C,bg=green,bold] %r '
set -g status-right-length          50

# Current tab
set -g window-status-current-format '#[fg=green,bold]#I.#[fg=white,bold] #W#[fg=cyan,bold]#F'

# Other tabs
set -g window-status-format         '#[fg=brightblack]#I. #W '

#}}}
# Keybindings: {{{

bind C-a send-prefix

# Reload tmux.conf
bind r source ~/.config/tmux/tmux.conf \; \
    display 'Reloaded tmux config.'

# Global (root-level) bindings
bind -n M-Enter  resize-pane -Z

# Cooperate with Vim buffers
bind -n M-h if "$is_vim" "send M-h"  "select-pane -L"
bind -n M-j if "$is_vim" "send M-j"  "select-pane -D"
bind -n M-k if "$is_vim" "send M-k"  "select-pane -U"
bind -n M-l if "$is_vim" "send M-l"  "select-pane -R"
bind -n M-\ if "$is_vim" "send M-\\" "select-pane -l"
bind -T copy-mode-vi M-h select-pane -L
bind -T copy-mode-vi M-j select-pane -D
bind -T copy-mode-vi M-k select-pane -U
bind -T copy-mode-vi M-l select-pane -R
bind -T copy-mode-vi M-\ select-pane -l

# Resize pane with Alt-Shift-(h,j,k,l)
bind -n M-L resize-pane -R 5
bind -n M-H resize-pane -L 5
bind -n M-K resize-pane -U
bind -n M-J resize-pane -D

# Next / previous window
bind -n C-M-l next-window
bind -n C-M-h previous-window

# Swap tabs
bind-key -n C-S-Left  swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind :      command-prompt     # Activate command prompt
bind '?'    list-keys          # Show list of keybindings
bind Space  next-layout        # Switch layout mode
bind '~'    show-message       # Display log messages
bind [      copy-mode          # Enter copy mode
bind v      copy-mode          # Enter copy mode
bind ]      paste-buffer       # Paste most recently copied text
bind t      clock-mode         # Enter clock mode
bind q      display-panes      # Briefly display pane indexes
bind '{'    swap-pane -U       # Swap the current pane with the previous pane
bind '}'    swap-pane -D       # Swap the current pane with the next pane

# Session commands
bind '$'    command-prompt -I "rename-session "                   # Rename active session
bind '('    switch-client -p                                      # Switch to previous session
bind ')'    switch-client -n                                      # Switch to next session

# Window commands
bind X      confirm-before -p "kill-window #W? (y/n)" kill-window # Kill active window
bind c      new-window -a -c "#{pane_current_path}"               # Create new window in current directory
bind ,      command-prompt -I "rename-window "                    # Rename active window

bind 1      select-window -t :1                                   # Select window 1
bind 2      select-window -t :2                                   # Select window 2
bind 3      select-window -t :3                                   # Select window 3
bind 4      select-window -t :4                                   # Select window 4
bind 5      select-window -t :5                                   # Select window 5
bind 6      select-window -t :6                                   # Select window 6
bind 7      select-window -t :7                                   # Select window 7
bind 8      select-window -t :8                                   # Select window 8
bind 9      select-window -t :9                                   # Select window 9

# Pane commands
bind x      confirm-before -p "kill-pane #P? (y/n)" kill-pane     # Kill active pane
bind _      split-window -v -c "#{pane_current_path}"             # Split window vertically (top and bottom)
bind |      split-window -h -c "#{pane_current_path}"             # Split window horizontally (left and right)

# Switch pane with Alt-(h,j,k,l) (Vim-aware)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# vi-style copy/paste
bind -T copy-mode-vi v send -X begin-selection

# Mouse controls
set -g mouse on
bind -n WheelUpPane      if -F -t = "#{alternate_on}" \
                            "send -M" \
                            "select-pane -t =; copy-mode -e; send -M"
bind -n WheelDownPane    if -F -t = "#{alternate_on}" \
                            "send -M" \
                            "select-pane -t =; send -M"
bind -n MouseDown1Status select-window -t=  # Select window with left click
bind -n MouseDown2Status kill-window -t=    # Kill window with middle click

#}}}
# Machine Specific: {{{

%if #{==:#{host_short},archlinux}
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
%else
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
%endif

#}}}
# Plugins: {{{

setenv -g TMUX_PLUGIN_MANAGER_PATH ~/.config/tmux/plugins/
set -g @tpm_plugins ' \
    tmux-plugins/tpm  \
    Morantron/tmux-fingers \
'

# tmux-fingers
set -g @fingers-key f
set -g @fingers-compact-hints 0
set -g @fingers-copy-command 'xclip -selection clipboard'
set -g @fingers-hint-format '#[fg=cyan,bold][#[fg=red,bold]%s#[fg=cyan,bold]]'
set -g @fingers-hint-format-nocompact '#[fg=cyan,bold][#[fg=red,bold]%s#[fg=cyan,bold]]'
set -g @fingers-highlight-format '#[fg=black,bold,dim,bg=yellow]%s'
set -g @fingers-highlight-format-nocompact '#[fg=black,bold,dim,bg=yellow]%s'

set -g @fingers-pattern-0 '(([0-9]+[a-zA-Z]+|[a-zA-Z]+[0-9]+)[a-zA-Z0-9]+){2,}' # Docker image IDs & now.sh deployment IDs
set -g @fingers-pattern-1 '[^[:space:]]+.now.sh'                                # now.sh urls

# Initialize tpm
if "test ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm && $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins'"

run ~/.config/tmux/plugins/tpm/tpm

#}}}

# vim: set fdm=marker:
