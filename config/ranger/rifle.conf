# Usage {{{
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match  <regexp>   | The regexp matches $1
#   ext    <regexp>   | The regexp matches the extension of $1
#   mime   <regexp>   | The regexp matches the mime type of $1
#   name   <regexp>   | The regexp matches the basename of $1
#   path   <regexp>   | The regexp matches the absolute path of $1
#   has    <program>  | The program is installed (i.e. located in $PATH)
#   env    <variable> | The environment variable "variable" is non-empty
#   number <n>        | change the number of this command to n
#   file              | $1 is a file
#   directory         | $1 is a directory
#   terminal          | stdin, stderr and stdout are connected to a terminal
#   X                 | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag  <flags> | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# NOTE: The "New command" serves only as an illustration, the exact
# implementation may differ.
#
# NOTE: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.
#
# }}}
# Directories {{{

label feh_slideshow, has feh, directory, X, flag f = feh -z -Z -F -d --cycle-once -- "$1"

# }}}
# Text Files {{{

mime ^text, label editor = $EDITOR -- "$@"
mime ^text, label pager  = $PAGER  -- "$@"

# Edge Cases (where "mimetypes" python module fails)
ext jsx?|json|sh|sql|tex, label editor = $EDITOR -- "$@"
ext jsx?|json|sh|sql|tex, label pager  = $PAGER  -- "$@"

# }}}
# Documents {{{

# HTML
mime ^text/html, has xdg-open, X = xdg-open "$@"

# PDF
mime application/pdf, has zathura,          X, flag f = zathura "$@"
mime application/pdf, has gimagereader-gtk, X, flag f = gimagereader-gtk "$@"

# Misc
ext csv|docx?|gnm|gnumeric|od[dfgpst]|pptx?|sxc|xlsx?|xlt|xlw,      has libreoffice, X, flag f = libreoffice "$@"
ext docx?|gnm|gnumeric|html|od[dfgpst]|pdf|pptx?|sxc|xlsx?|xlt|xlw, has open,           flag f = open "$@"

# }}}
# Multimedia {{{

# Audio/Video
mime ^video|audio, has mpv,      X, flag f = mpv -- "$@"
mime ^video|audio, has open,        flag f = open "$@"

# SVG
mime ^image/svg, label editor            = $EDITOR -- "$@"
mime ^image/svg, has inkscape, X, flag f = inkscape -- "$@"

# Images
mime ^image, ext gif, has gifview, X, flag f = gifview -a -- "$@"
mime ^image, has feh,              X, flag f = feh -ZFd -- "$@"
mime ^image, has gimp,             X, flag f = gimp -- "$@"

# }}}
# Archives {{{

ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz|iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip,  has als = als -- "$@" | "$PAGER"

# }}}

# Fallback
!mime ^text = ask

# The very last action, so that it's never triggered accidently, is to execute a program:
mime application/x-executable = "$1"

# vim: ft=cfg fdm=marker:
