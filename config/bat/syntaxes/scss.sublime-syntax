%YAML 1.2
---
name: SCSS
file_extensions: [scss]
scope: source.scss


variables:
  interpolation_start: \#{(?=.*})
  interpolation_end: \}
  quoted_string: ("|')(?=.*\1)
  property_name: (^|;|,|\{|\()\s*(?=-?[\w#]+[\w\-$#{}]+:)


contexts:
  main:
    # push onto the map stack if the first character of a variable's value is '('
    - match: (\$[\w\-]+)(?=:\s*\()|(?<=(\s|,)\($)
      captures:
        1: variable.parameter.sass
      push: map

    # push onto the block comment stack
    - match: /\*
      push: block_comment

    # push onto the line comment stack
    - match: //
      push: line_comment

    # highlight included mixin name as function
    - match: (@include)\s+([\w\-]+)
      captures:
        1: keyword.control.at-rule.css.sass
        2: support.function.sass

    # highlight mixin and function definition
    - match: (@mixin|@function)\s+([\w\-]+)
      captures:
        1: keyword.control.at-rule.css.sass
        2: entity.name.function.sass

    # highlight at-rules
    - match: '@[\w\-]*(\s*if)?'
      scope: keyword.control.at-rule.css.sass

    # highlight type selector
    - match: \b(a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|content|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i|iframe|img|input|ins|isindex|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|rtc|ruby|s|samp|script|section|select|slot|small|source|span|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|svg|circle|ellipse|line|path|polygon|polyline|rect|text|title)\b(?!-)
      scope: entity.name.tag.css.sass

    # hightlight attribution selector
    - match: \[([\w\-]+)(\^|\$|\*|~|\|)*(=)?([\w"'\-]+)?\]
      captures:
        1: entity.other.attribute-name.css.sass
        2: keyword.operator.attribute-selector.css.sass
        # 3: # match =
        4: string.quoted.css.sass

    # push onto the id selector stack
    - match: \#(?!{)
      push: id_selector

    # push onto the class selector stack
    - match: \.(?!\d|\.)
      push: class_selector

    # highlight placeholder selector as class selector
    - match: (?<!\d)%
      push: class_selector

    # highlight parent selector
    - match: '(&)([\w\-]*)'
      captures:
        1: keyword.other.parent-selector.sass
        2: entity.other.attribute-name.class.css.sass

    # highlight pseudo elements and pseudo classes
    - match: :{1,2}[a-z\-]+(?=\s|:|,|\(|\)|>|~|\+|\.|#|\{|$)
      scope: entity.other.pseudo-class.css.sass

    # push onto the property name stack
    - match: '{{property_name}}'
      push: property_name

    # push onto the property value list stack
    - match: ':'
      push: value_list

    # push onto the quoted string stack
    - match: '{{quoted_string}}'
      push: quoted_string

    # push onto the interpolation stack
    - match: '{{interpolation_start}}'
      push: interpolation

    # include patterns
    - include: flag
    - include: css_variable
    - include: variable
    - include: numeric
    - include: unit
    - include: function
    - include: operator
    - include: reserved_word
    - include: property_value


  # patterns

  css_variable:
    - match: --[\w\-]*
      scope: variable.parameter.sass

  variable:
    - match: \$[\w\-]*|\.{3}
      scope: variable.parameter.sass

  css_function_has_quote:
    - match: \b(url|format|attr)\((.+?)\)
      captures:
        1: support.constant.property-value.css.sass
        2: string.quoted.css.sass

  css_function:
    - match: \b(annotation|blur|brightness|calc|character-variant|circle|contrast|cross-fade|cubic-bezier|drop-shadow|element|ellipse|fit-content|frames|grayscale|hue-rotate|image|image-set|inset|invert|leader|linear-gradient|local|matrix|matrix3d|minmax|opacity|ornaments|perspective|polygon|radial-gradient|rect|repeat|repeating-linear-gradient|repeating-radial-gradient|rotate|rotate3d|rotateX|rotateY|rotateZ|saturate|scale|scale3d|scaleX|scaleY|scaleZ|sepia|skew|skewX|skewY|steps|styleset|stylistic|swash|symbols|target-counter|target-counters|target-text|translate|translate3d|translateX|translateY|translateZ|var)+(?=\()
      scope: support.constant.property-value.css.sass

  function:
    - match: '[\w\-]+(?=\()'
      scope: support.function.sass

  property_value:
    - match: '[\w\-]*\w+\b(?!\s*:|-)'
      scope: support.constant.property-value.css.sass

  numeric:
    - match: -?\d*\.?\d+|-(?=#{|\$|\()
      scope: constant.numeric.css.sass

  unit:
    - match: (?<=\d|})(em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|deg|grad|rad|turn|Hz|kHz|dpi|dpcm|dppx|s|ms|n(\+|-)?|%)
      scope: keyword.other.unit.css.sass

  operator:
    - match: \+|-|\*|/|%|=|!|<|>|~
      scope: keyword.operator.css.sass

  hex_color:
    - match: '#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b'
      scope: constant.other.color.rgb-value.css.sass

  flag:
    - match: '!(important|default|optional|global)'
      scope: keyword.other.important.css.sass

  reserved_word:
    - match: \b(true|false|null|from|through|to|in|or|and|not|all|print|screen|speech|only)\b(?!-)
      scope: keyword.other.reserved.sass

  property_name:
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: '[\w\-]'
      scope: support.type.property-name.css.sass
    - match: (?=:)
      pop: true


  # stacks

  map:
    - match: //
      push: line_comment
    - match: '{{quoted_string}}'
      push: quoted_string
    - match: '{{interpolation_start}}'
      push: interpolation
    - include: flag
    - include: hex_color
    - include: css_variable
    - include: variable
    - include: numeric
    - include: unit
    - include: css_function_has_quote
    - include: css_function
    - include: function
    - include: operator
    - include: reserved_word
    - include: property_value
    - match: ;|$
      pop: true

  value_list:
    - match: //
      push: line_comment
    - match: '{{property_name}}'
      push: property_name
    - match: '{{quoted_string}}'
      push: quoted_string
    - match: '{{interpolation_start}}'
      push: interpolation
    - include: flag
    - include: hex_color
    - include: css_variable
    - include: variable
    - include: numeric
    - include: unit
    - include: css_function_has_quote
    - include: css_function
    - include: function
    - include: operator
    - include: reserved_word
    - include: property_value
    - match: ;|$
      pop: true

  block_comment:
    - meta_scope: comment.block.css.sass
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: \*/
      pop: true

  line_comment:
    - meta_scope: comment.line.sass
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: $
      pop: true

  id_selector:
    - meta_scope: entity.other.attribute-name.id.css.sass
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: $|(?=\s|,|:|;|\.|\(|\)|\[|{|>|\+|~)
      pop: true

  class_selector:
    - meta_scope: entity.other.attribute-name.class.css.sass
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: $|(?=\s|,|:|;|#|\(|\)|\[|{|>|\+|~)
      pop: true

  quoted_string:
    - meta_scope: string.quoted.double.css.sass
    - match: \\.
      scope: constant.character.escape
    - match: '{{interpolation_start}}'
      push: interpolation
    - match: \1
      pop: true

  interpolation:
    - meta_scope: keyword.control.interpolation.sass
    - match: '{{quoted_string}}'
      push: quoted_string
    - include: css_variable
    - include: variable
    - include: numeric
    - include: unit
    - include: function
    - include: operator
    - include: property_value
    - match: '{{interpolation_end}}'
      pop: true
